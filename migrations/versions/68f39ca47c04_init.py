"""init

Revision ID: 68f39ca47c04
Revises: 
Create Date: 2022-03-19 10:53:15.928177

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '68f39ca47c04'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('account_token', sa.String(length=128), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_account_token'), 'users', ['account_token'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_password_hash'), 'users', ['password_hash'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('foods',
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('domain', sa.TEXT(), nullable=True),
    sa.Column('name', sa.TEXT(), nullable=True),
    sa.Column('portion', sa.TEXT(), nullable=True),
    sa.Column('unit', sa.TEXT(), nullable=True),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('fat', sa.Integer(), nullable=True),
    sa.Column('cholesterol', sa.Integer(), nullable=True),
    sa.Column('sodium', sa.Integer(), nullable=True),
    sa.Column('carbohydrate', sa.Integer(), nullable=True),
    sa.Column('protein', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('index')
    )
    op.create_table('healths',
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('po_pulse', sa.Integer(), nullable=True),
    sa.Column('po_ox', sa.Integer(), nullable=True),
    sa.Column('weight', sa.REAL(), nullable=True),
    sa.Column('fat', sa.REAL(), nullable=True),
    sa.Column('bpc_pulse', sa.Integer(), nullable=True),
    sa.Column('bpc_systolic', sa.Integer(), nullable=True),
    sa.Column('bpc_diastolic', sa.Integer(), nullable=True),
    sa.Column('bpc_ihb', sa.Boolean(), nullable=True),
    sa.Column('bpc_hypertension', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.REAL(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('index')
    )
    op.create_table('meals',
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('calories', sa.REAL(), nullable=True),
    sa.Column('fat', sa.REAL(), nullable=True),
    sa.Column('cholesterol', sa.REAL(), nullable=True),
    sa.Column('sodium', sa.REAL(), nullable=True),
    sa.Column('carbohydrate', sa.REAL(), nullable=True),
    sa.Column('protein', sa.REAL(), nullable=True),
    sa.Column('serving', sa.TEXT(), nullable=True),
    sa.Column('indices', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('index')
    )
    op.create_table('scans',
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('message', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('glucose', sa.Integer(), nullable=True),
    sa.Column('trend', sa.Integer(), nullable=True),
    sa.Column('bolus', sa.Boolean(), nullable=True),
    sa.Column('bolus_u', sa.Integer(), nullable=True),
    sa.Column('basal', sa.Boolean(), nullable=True),
    sa.Column('basal_u', sa.Integer(), nullable=True),
    sa.Column('food', sa.Boolean(), nullable=True),
    sa.Column('carbohydrate', sa.Integer(), nullable=True),
    sa.Column('medication', sa.Boolean(), nullable=True),
    sa.Column('exercise', sa.Boolean(), nullable=True),
    sa.Column('lower_limit', sa.REAL(), nullable=True),
    sa.Column('upper_limit', sa.REAL(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('index')
    )
    op.create_table('targets',
    sa.Column('index', sa.Integer(), nullable=False),
    sa.Column('ts', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('chart_min', sa.Integer(), nullable=True),
    sa.Column('chart_max', sa.Integer(), nullable=True),
    sa.Column('limit_min', sa.Integer(), nullable=True),
    sa.Column('limit_max', sa.Integer(), nullable=True),
    sa.Column('target_min', sa.Integer(), nullable=True),
    sa.Column('target_max', sa.Integer(), nullable=True),
    sa.Column('my_target_min', sa.Integer(), nullable=True),
    sa.Column('my_target_max', sa.Integer(), nullable=True),
    sa.Column('meal_ideal', sa.Integer(), nullable=True),
    sa.Column('meal_good', sa.Integer(), nullable=True),
    sa.Column('meal_bad', sa.Integer(), nullable=True),
    sa.Column('my_target_weight', sa.Numeric(), nullable=True),
    sa.Column('my_target_bmi', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('index')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('targets')
    op.drop_table('scans')
    op.drop_table('meals')
    op.drop_table('healths')
    op.drop_table('foods')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_password_hash'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_account_token'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
